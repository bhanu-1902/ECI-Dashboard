{"version":3,"sources":["components/TCServices/tcservicesList.js","App.js","reportWebVitals.js","index.js"],"names":["Service","props","service","SERVICE_NAME","STATE","Button","type","class","TCServiceList","state","services","axios","get","then","response","setState","data","Windows","TC","catch","error","console","log","this","map","currentservice","_id","striped","bordered","hover","serviceList","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAKMA,EAAU,SAACC,GAAD,OACZ,+BACI,6BAAKA,EAAMC,QAAQC,eACnB,6BAAKF,EAAMC,QAAQE,QACnB,6BAAI,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,yBAA5B,qBACJ,6BACI,cAACF,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,wBAA5B,yBAKSC,E,kDAEjB,WAAYP,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CAAEC,SAAU,IAFV,E,qDAMnB,WAAqB,IAAD,OAChBC,IACKC,IAAI,qCACJC,MAAK,SAACC,GACH,EAAKC,SAAS,CAAEL,SAAUI,EAASE,KAAK,GAAGC,QAAQ,GAAGC,QAEzDC,OAAM,SAAUC,GACbC,QAAQC,IAAIF,Q,yBAKxB,WACI,OAAOG,KAAKd,MAAMC,SAASc,KAAI,SAACC,GAC5B,OACI,cAAC,EAAD,CACIvB,QAASuB,GACJA,EAAeC,U,oBAOpC,WACI,OACI,gCACI,8CACA,eAAC,IAAD,CAAsBC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA5C,UACI,gCACI,+BACI,8CACA,6CAGR,gCACKN,KAAKO,0B,GA5CaC,aCL5BC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a4501eb7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as ReactBootStrap from \"react-bootstrap\"\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst Service = (props) => (\r\n    <tr>\r\n        <td>{props.service.SERVICE_NAME}</td>\r\n        <td>{props.service.STATE}</td>\r\n        <td><Button type=\"button\" class=\"btn btn-success active\">Start</Button></td>\r\n        <td>\r\n            <Button type=\"button\" class=\"btn btn-danger active\"> Stop</Button>\r\n        </td>\r\n    </tr>\r\n);\r\n\r\nexport default class TCServiceList extends Component {\r\n    // This is the constructor that shall store our data retrieved from the database\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { services: [] };\r\n    }\r\n\r\n    // This method will get the data from the database.\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"http://localhost:3000/tcservices/\")\r\n            .then((response) => {\r\n                this.setState({ services: response.data[0].Windows[0].TC });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // This method will map out the users on the table\r\n    serviceList() {\r\n        return this.state.services.map((currentservice) => {\r\n            return (\r\n                <Service\r\n                    service={currentservice}\r\n                    key={currentservice._id}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    // This following section will display the table with the records of individuals.\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Service List</h3>\r\n                <ReactBootStrap.Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Service Name</th>\r\n                            <th>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.serviceList()}\r\n                    </tbody>\r\n                </ReactBootStrap.Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport TCServiceList from './components/TCServices/tcservicesList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TCServiceList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}